var j=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports);var P=j((A,S)=>{var u=require("fs"),H=require("path"),y=class{constructor(e){this.apiDirectory=e,this.routes=new Map,this.loadRoutes()}loadRoutes(){if(!u.existsSync(this.apiDirectory))return;let e=(t,o="/api")=>{u.readdirSync(t).forEach(r=>{let s=H.join(t,r);if(u.statSync(s).isDirectory())e(s,`${o}/${r}`);else if(r.endsWith(".ts")||r.endsWith(".js")){let d=(o+"/"+r.replace(/\.(ts|js)$/,"")).replace("/index","")||"/";this.routes.set(d,require(s))}})};e(this.apiDirectory)}async handleRequest(e,t){let o=new URL(e.url,`http://${e.headers.host}`),i=o.pathname,r=i.endsWith("/")&&i!=="/"?i.slice(0,-1):i,s=this.routes.get(r);if(!s){t.writeHead(404),t.end(JSON.stringify({error:"Not Found"}));return}let c={};o.searchParams.forEach((n,p)=>{c[p]=n});let l={};if(["POST","PUT","PATCH"].includes(e.method))try{let n=[];for await(let T of e)n.push(T);let p=Buffer.concat(n).toString();l=JSON.parse(p)}catch(n){console.error("Error parsing request body:",n)}let d={...e,query:c,body:l,params:{}},f={...t,status:n=>(t.statusCode=n,f),json:n=>{t.setHeader("Content-Type","application/json"),t.end(JSON.stringify(n))},send:n=>{typeof n=="object"?(t.setHeader("Content-Type","application/json"),t.end(JSON.stringify(n))):(t.setHeader("Content-Type","text/plain"),t.end(n.toString()))}};try{if(t.setHeader("Access-Control-Allow-Origin","*"),t.setHeader("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","Content-Type"),e.method==="OPTIONS"){t.writeHead(200),t.end();return}let n=s[e.method.toLowerCase()];if(!n){t.writeHead(405),t.end(JSON.stringify({error:"Method Not Allowed"}));return}await n(d,f)}catch(n){console.error("Error handling API request:",n),t.writeHead(500),t.end(JSON.stringify({error:"Internal Server Error"}))}}};S.exports=y});var O=require("http"),m=require("fs"),h=require("path"),E=P(),g=h.join(process.cwd(),"dist"),R=h.join(g,"api"),C=new E(R),x={".html":"text/html",".js":"application/javascript",".css":"text/css",".json":"application/json",".png":"image/png",".jpg":"image/jpeg",".gif":"image/gif",".svg":"image/svg+xml",".ico":"image/x-icon"},N=O.createServer(async(a,e)=>{let t=new URL(a.url,`http://${a.headers.host}`);if(console.log(`[${a.method}] ${t.pathname}`),t.pathname.startsWith("/api/"))return C.handleRequest(a,e);try{let o=h.join(g,t.pathname==="/"?"index.html":t.pathname);(!m.existsSync(o)||m.statSync(o).isDirectory())&&(o=h.join(g,"index.html"));let i=h.extname(o),r=x[i]||"application/octet-stream",s=await m.promises.readFile(o),c=t.pathname.startsWith("/static/")?"public, max-age=31536000":"no-cache";e.writeHead(200,{"Content-Type":r,"Cache-Control":c}),e.end(s)}catch(o){console.error(`Error serving ${t.pathname}:`,o),o.code==="ENOENT"?(e.writeHead(404),e.end("404 Not Found")):(e.writeHead(500),e.end("500 Internal Server Error"))}}),w=process.env.PORT||3e3;N.listen(w,()=>{console.log(`
\u{1F680} Production server running at:
   > Local:    http://localhost:${w}
  `)});
